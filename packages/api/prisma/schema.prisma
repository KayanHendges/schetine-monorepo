// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Professional {
  id                   String                 @unique @default(uuid())
  name                 String
  username             String                 @unique
  email                String                 @unique
  password             String
  businessProfessional BusinessProfessional[]
  appointments         Appointment[]
  business             Business[]
  modified             DateTime               @updatedAt
  created              DateTime               @default(now())

  @@map("professionals")
}

model Business {
  id                   String                 @unique @default(uuid())
  name                 String
  ownerId              String                 @map("owner_id")
  onwer                Professional           @relation(fields: [ownerId], references: [id])
  appointments         Appointment[]
  businessProfessional BusinessProfessional[]
  modified             DateTime               @updatedAt
  created              DateTime               @default(now())
  Client               Client[]

  @@map("business")
}

model BusinessProfessional {
  id             String       @unique @default(uuid())
  businessId     String       @map("business_id")
  business       Business     @relation(fields: [businessId], references: [id])
  professionalId String       @map("professional_id")
  professional   Professional @relation(fields: [professionalId], references: [id])

  @@map("business_professionals")
}

model Client {
  id          String        @unique @default(uuid())
  name        String
  businessId  String        @map("business_id")
  business    Business      @relation(fields: [businessId], references: [id])
  phone       String?
  cpf         String?
  birth       DateTime?
  email       String?
  comment     String?
  Appointment Appointment[]
  modified    DateTime      @updatedAt
  created     DateTime      @default(now())

  @@map("clients")
}

model Appointment {
  id             String       @unique @default(uuid())
  number         Int
  businessId     String       @map("business_id")
  business       Business     @relation(fields: [businessId], references: [id])
  professionalId String       @map("professional_id")
  professional   Professional @relation(fields: [professionalId], references: [id])
  clientId       String       @map("client_id")
  client         Client       @relation(fields: [clientId], references: [id])
  price          Float        @default(0)
  start          DateTime
  end            DateTime
  duration       Int
  modified       DateTime     @updatedAt
  created        DateTime     @default(now())

  @@map("appointments")
}
